# Server container
watch_file('./deployments/api.yaml')
k8s_yaml(local('bazel run //services/reading-contest-api/deployments:api'))

custom_build(
  ref='reading-contest-api-image',
  command=(
    'bazel run --platforms=@io_bazel_rules_go//go/toolchain:linux_amd64 {image_target} -- --norun && ' +
    'docker tag {bazel_image} $EXPECTED_REF').format(
      image_target='//services/reading-contest-api/cmd/server:base_image',
      bazel_image='bazel/services/reading-contest-api/cmd/server:base_image'
    ),
  deps=['./'],
)

k8s_resource('reading-contest-api', port_forwards=8000, labels=["backend"])

# Migration job
watch_file('./deployments/migrate.yaml')
k8s_yaml(local('bazel run //services/reading-contest-api/deployments:migrate'))

custom_build(
  ref='reading-contest-api-migrate-image',
  command=(
    'bazel run --platforms=@io_bazel_rules_go//go/toolchain:linux_amd64 {image_target} -- --norun && ' +
    'docker tag {bazel_image} $EXPECTED_REF').format(
      image_target='//services/reading-contest-api/cmd/migrate:image',
      bazel_image='bazel/services/reading-contest-api/cmd/migrate:image'
    ),
  deps=['interfaces/repositories/migrations'],
)

k8s_resource('reading-contest-api-migration-job', resource_deps=['reading-contest-api'], labels=["backend"])

# Seed script
k8s_yaml('deployments/seed-db-configmap.yaml')
k8s_yaml('deployments/seed-db.yaml')
k8s_resource('seed-reading-contest-api-job',
  trigger_mode=TRIGGER_MODE_MANUAL,
  auto_init=False,
  labels=["backend"],
)
